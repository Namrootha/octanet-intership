<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 400px;
        }

        h1 {
            text-align: center;
        }

        .todo-input {
            display: flex;
            margin-bottom: 20px;
        }

        .todo-input input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-right: 10px;
        }

        .todo-input button {
            padding: 10px 20px;
            border: none;
            background-color: #28a745;
            color: #fff;
            border-radius: 4px;
            cursor: pointer;
        }

        .todo-input button:hover {
            background-color: #218838;
        }

        #task-list {
            list-style: none;
            padding: 0;
        }

        .task-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            margin-bottom: 10px;
            background-color: #f9f9f9;
        }

        .task-item.completed .task-text {
            text-decoration: line-through;
            color: #999;
        }

        .task-buttons {
            display: flex;
            gap: 10px;
        }

        .task-buttons button {
            border: none;
            background: none;
            cursor: pointer;
        }

        .task-buttons .edit-btn {
            color: #007bff;
        }

        .task-buttons .delete-btn {
            color: #dc3545;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>To-Do List</h1>
        <div class="todo-input">
            <input type="text" id="new-task-input" placeholder="Add a new task...">
            <button id="add-task-btn">Add Task</button>
        </div>
        <ul id="task-list">
            <!-- Task items will be dynamically added here -->
        </ul>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const taskInput = document.getElementById('new-task-input');
            const addTaskBtn = document.getElementById('add-task-btn');
            const taskList = document.getElementById('task-list');

            addTaskBtn.addEventListener('click', addTask);

            function addTask() {
                const taskText = taskInput.value.trim();
                if (taskText !== '') {
                    const taskItem = document.createElement('li');
                    taskItem.className = 'task-item';

                    const taskTextElement = document.createElement('span');
                    taskTextElement.className = 'task-text';
                    taskTextElement.textContent = taskText;
                    taskItem.appendChild(taskTextElement);

                    const taskButtons = document.createElement('div');
                    taskButtons.className = 'task-buttons';

                    const editBtn = document.createElement('button');
                    editBtn.className = 'edit-btn';
                    editBtn.textContent = 'Edit';
                    editBtn.addEventListener('click', () => editTask(taskItem, taskTextElement));
                    taskButtons.appendChild(editBtn);

                    const deleteBtn = document.createElement('button');
                    deleteBtn.className = 'delete-btn';
                    deleteBtn.textContent = 'Delete';
                    deleteBtn.addEventListener('click', () => deleteTask(taskItem));
                    taskButtons.appendChild(deleteBtn);

                    const completeBtn = document.createElement('button');
                    completeBtn.className = 'complete-btn';
                    completeBtn.textContent = 'Complete';
                    completeBtn.addEventListener('click', () => completeTask(taskItem));
                    taskButtons.appendChild(completeBtn);

                    taskItem.appendChild(taskButtons);
                    taskList.appendChild(taskItem);

                    taskInput.value = '';
                }
            }

            function editTask(taskItem, taskTextElement) {
                const newTaskText = prompt('Edit your task:', taskTextElement.textContent);
                if (newTaskText !== null && newTaskText.trim() !== '') {
                    taskTextElement.textContent = newTaskText.trim();
                }
            }

            function deleteTask(taskItem) {
                taskList.removeChild(taskItem);
            }

            function completeTask(taskItem) {
                taskItem.classList.toggle('completed');
            }
        });
    </script>
</body>
</html>
